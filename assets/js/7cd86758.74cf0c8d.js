"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[3167],{564:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});var t=n(9774),i=n(4848),s=n(8453);const l={slug:"introduction-to-pandas",title:"Introduction To Pandas",authors:["narendra"],tags:["python","machine-learning","data-science","pandas"],date:new Date("2017-07-08T00:00:00.000Z")},d="Introduction To Pandas",r={authorsImageUrls:[void 0]},o=[{value:"Data Structures in Pandas",id:"data-structures-in-pandas",level:2},{value:"Series",id:"series",level:3},{value:"How to create Series",id:"how-to-create-series",level:4},{value:"Creating a series with index",id:"creating-a-series-with-index",level:4},{value:"DataFrame",id:"dataframe",level:3},{value:"How to import Data in Dataframe",id:"how-to-import-data-in-dataframe",level:4},{value:"How to inspect Data in Dataframe",id:"how-to-inspect-data-in-dataframe",level:4},{value:"Select and Index in DataFrames",id:"select-and-index-in-dataframes",level:2},{value:"Single selections using iloc and DataFrame",id:"single-selections-using-iloc-and-dataframe",level:3},{value:"Rows:",id:"rows",level:4},{value:"Columns:",id:"columns",level:4},{value:"Multiple row and column selections using <code>iloc</code> and <code>DataFrame</code>",id:"multiple-row-and-column-selections-using-iloc-and-dataframe",level:3},{value:"Selecting pandas data using <code>loc</code>:",id:"selecting-pandas-data-using-loc",level:3},{value:"Selecting pandas data using <code>ix</code>:",id:"selecting-pandas-data-using-ix",level:3},{value:"Add and Delete in DataFrame",id:"add-and-delete-in-dataframe",level:2},{value:"Adding row in DataFrame",id:"adding-row-in-dataframe",level:3},{value:"Adding column in DataFrame",id:"adding-column-in-dataframe",level:3},{value:"Delete a column from DataFrame by column name",id:"delete-a-column-from-dataframe-by-column-name",level:3},{value:"Delete a column from DataFrame by row index",id:"delete-a-column-from-dataframe-by-row-index",level:3}];function c(e){const a={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Pandas"})," is one of the widely used Python libraries for working with data. it is built on libraries like Matplotlib and NumPy. Pandas is great for data manipulation, data analysis, and data visualization."]}),"\n",(0,i.jsx)(a.p,{children:"In this tutorial we will see how pandas makes life really easy for a data analysis. Pandas can read and write data from and to CSV files or even databases easily."}),"\n",(0,i.jsx)(a.h2,{id:"data-structures-in-pandas",children:"Data Structures in Pandas"}),"\n",(0,i.jsx)(a.h3,{id:"series",children:"Series"}),"\n",(0,i.jsx)(a.p,{children:"A series is a one-dimensional object, like an array, list or could be understood as a column in table. similar to the array or list index each element in a series is assigned with a labeled index. By default, each item is given an numerical index label from 0 to N, where N is the length of the Series minus one."}),"\n",(0,i.jsx)(a.h4,{id:"how-to-create-series",children:"How to create Series"}),"\n",(0,i.jsxs)(a.p,{children:["The basic method to create a Series is to call ",(0,i.jsx)(a.code,{children:".Series()"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"# import pandas\nimport pandas as pd\n\n# create a Series with an arbitrary list\nX1 = pd.Series([7, 'develbyte', 3.14, 'Happy Learnning'])\nX1\n"})}),"\n",(0,i.jsx)(a.p,{children:"0                  7\n1          develbyte\n2               3.14\n3    Happy Learnning\ndtype: object"}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Note:-"})," when the Series contains elements of multiple different datatypes the dtype of the series will be the higher datatype"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"int32 > int64 > flot64 >.....>object"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"X2 = pd.Series([7, 5, 4, 3])\nprint(X2)\n\nX3 = pd.Series([7, 5, 4., 3.])\nprint(X3)\n"})}),"\n",(0,i.jsx)(a.p,{children:"0    7\n1    5\n2    4\n3    3\ndtype: int64\n0    7.0\n1    5.0\n2    4.0\n3    3.0\ndtype: float64"}),"\n",(0,i.jsx)(a.h4,{id:"creating-a-series-with-index",children:"Creating a series with index"}),"\n",(0,i.jsx)(a.p,{children:"index of the series elements can also be changes by simply passing a list of indexes, the list of elements and the list of indexes should be of same length or you will end up with error"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"X1 = pd.Series([7, 'develbyte', 3.14, 'Happy Learnning'],\n              index=['A', 'B', 'C', 'D'])\n\nprint(X1)\n"})}),"\n",(0,i.jsx)(a.p,{children:"A                  7\nB          develbyte\nC               3.14\nD    Happy Learnning\ndtype: object"}),"\n",(0,i.jsx)(a.h3,{id:"dataframe",children:"DataFrame"}),"\n",(0,i.jsx)(a.p,{children:"DataFrame is a two-dimensional labeled data structures with columns of same or different data types. Similar to tables in a database the DataFrame can hold multiple columns with multiple data types. You can also think of a DataFrame as a group of Series objects that share an index."}),"\n",(0,i.jsx)(a.h4,{id:"how-to-import-data-in-dataframe",children:"How to import Data in Dataframe"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"# Importing the dataset\ndataset = pd.read_csv('/data/introduction-to-panda-1.csv')\ndataset\n"})}),"\n",(0,i.jsx)(a.p,{children:"This would display a table with Country, Age, Salary, and Purchased columns."}),"\n",(0,i.jsx)(a.h4,{id:"how-to-inspect-data-in-dataframe",children:"How to inspect Data in Dataframe"}),"\n",(0,i.jsx)(a.p,{children:"Very first information what we would like to know in a dataframe are:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"number of columns"}),"\n",(0,i.jsx)(a.li,{children:"number of records"}),"\n",(0,i.jsx)(a.li,{children:"attribute names"}),"\n",(0,i.jsx)(a.li,{children:"datatype of each attribute"}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["we can get all these information by calling just one function ",(0,i.jsx)(a.code,{children:"info()"})," it will give Concise summary of a DataFrame"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.info()\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{children:"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10 entries, 0 to 9\nData columns (total 4 columns):\nCountry      10 non-null object\nAge          9 non-null float64\nSalary       9 non-null float64\nPurchased    10 non-null object\ndtypes: float64(2), object(2)\nmemory usage: 392.0+ bytes\n"})}),"\n",(0,i.jsxs)(a.p,{children:["we can also use ",(0,i.jsx)(a.code,{children:"dtypes"})," to get the datatypes of each attribute"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.dtypes\n"})}),"\n",(0,i.jsx)(a.p,{children:"Country       object\nAge          float64\nSalary       float64\nPurchased     object\ndtype: object"}),"\n",(0,i.jsxs)(a.p,{children:["for just getting the column names in a dataframe use ",(0,i.jsx)(a.code,{children:"dataset.columns"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"# columns.values gives the column names in the DataFrame\ndataset.columns.values\n"})}),"\n",(0,i.jsx)(a.p,{children:"array(['Country', 'Age', 'Salary', 'Purchased'], dtype=object)"}),"\n",(0,i.jsx)(a.p,{children:"similarly for index values"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"# index.values gives the list of row indices\ndataset.index.values\n"})}),"\n",(0,i.jsx)(a.p,{children:"array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"}),"\n",(0,i.jsxs)(a.p,{children:["Probably the most useful function for inspecting a data set in a DataFrame is ",(0,i.jsx)(a.code,{children:"describe()"})," it will return basic statistics about the dataset's numeric columns"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.describe()\n"})}),"\n",(0,i.jsx)(a.p,{children:"This would show count, mean, std, min, 25%, 50%, 75%, and max for numeric columns."}),"\n",(0,i.jsxs)(a.p,{children:["For take a look at the actual data ",(0,i.jsx)(a.code,{children:"head()"})," and ",(0,i.jsx)(a.code,{children:"tail()"})," are the most useful function:"]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"head method shows first n rows from the DataFrame, default value of n is 5"}),"\n",(0,i.jsx)(a.li,{children:"tail method shows last n rows from the DataFrame, default value of n is 5"}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.head()\ndataset.tail()\n"})}),"\n",(0,i.jsx)(a.h2,{id:"select-and-index-in-dataframes",children:"Select and Index in DataFrames"}),"\n",(0,i.jsx)(a.p,{children:"There are three main options in pandas, which allows us to access the data in DataFrame, these are based on index and location of the rows and column, these options could be confusing for beginners but its quite simple once understood."}),"\n",(0,i.jsx)(a.p,{children:"The selection methods are:"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["Selecting data by row numbers called integer-location based indexing/selection (",(0,i.jsx)(a.code,{children:".iloc"}),")"]}),"\n",(0,i.jsxs)(a.li,{children:["Selecting data by label or by a conditional statement (",(0,i.jsx)(a.code,{children:".loc"}),")"]}),"\n",(0,i.jsxs)(a.li,{children:["Selecting in a hybrid approach(",(0,i.jsx)(a.code,{children:".ix"}),")"]}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"single-selections-using-iloc-and-dataframe",children:"Single selections using iloc and DataFrame"}),"\n",(0,i.jsx)(a.h4,{id:"rows",children:"Rows:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"R1 = dataset.iloc[0] # first row of data frame - Note a Series data type output.\nR2 = dataset.iloc[1] # second row of data frame\nR3 = dataset.iloc[-1] # last row of data frame\n"})}),"\n",(0,i.jsx)(a.h4,{id:"columns",children:"Columns:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"C1 = dataset.iloc[:,0] # first column of data frame (first_name)\nC2 = dataset.iloc[:,1] # second column of data frame (last_name)\nC3 = dataset.iloc[:,-1] # last column of data frame (id)\n"})}),"\n",(0,i.jsxs)(a.h3,{id:"multiple-row-and-column-selections-using-iloc-and-dataframe",children:["Multiple row and column selections using ",(0,i.jsx)(a.code,{children:"iloc"})," and ",(0,i.jsx)(a.code,{children:"DataFrame"})]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"MR1 = dataset.iloc[0:5] # first five rows of dataframe\nMR2 = dataset.iloc[:, 0:2] # first two columns of data frame with all rows\nMR3 = dataset.iloc[[0, 3, 6, 9], [0, 3]] # 1st, 4th, 7th, 9th row + 1st 3th 4th columns.\nMR4 = dataset.iloc[0:5, 1:3] # first 5 rows and 4th, 5th columns of data frame.\n"})}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:".iloc"})," returns a Pandas Series when one only row or Column is selected"]}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:".iloc"})," returns a Pandas DataFrame when multiple rows or Columns are selected"]}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:".iloc"})," returns a Pandas Series when multiple rows are selected with only one column"]}),"\n",(0,i.jsxs)(a.p,{children:["above output could easily converted to Pandas ",(0,i.jsx)(a.code,{children:"DataFrame"})," by passing a single-valued list as column index"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"print(type(dataset.iloc[1:2, [3]]))\n"})}),"\n",(0,i.jsxs)(a.h3,{id:"selecting-pandas-data-using-loc",children:["Selecting pandas data using ",(0,i.jsx)(a.code,{children:"loc"}),":"]}),"\n",(0,i.jsxs)(a.p,{children:["The Pandas ",(0,i.jsx)(a.code,{children:"loc"})," indexer can be used with DataFrames in two different scenarios:"]}),"\n",(0,i.jsx)(a.p,{children:"a.) Selecting rows by label/index\nb.) Selecting rows with a Boolean/conditional lookup"}),"\n",(0,i.jsxs)(a.p,{children:["The ",(0,i.jsx)(a.code,{children:"loc"})," indexer is used with the same syntax as ",(0,i.jsx)(a.code,{children:"iloc: data.loc[<row selection>, <column selection>]"})]}),"\n",(0,i.jsxs)(a.p,{children:["Index can be in a DataFrame by using ",(0,i.jsx)(a.code,{children:"set_index()"})," method"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:'dataset.set_index("Country", inplace=True)\ndataset\n'})}),"\n",(0,i.jsx)(a.p,{children:"Selecting rows by index"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.loc['France']\n"})}),"\n",(0,i.jsx)(a.p,{children:"Selecting rows by label/index"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.loc[['France', 'Spain'], ['Age', 'Salary']]\n"})}),"\n",(0,i.jsx)(a.p,{children:"Selecting rows with a Boolean/conditional lookup"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.loc[dataset['Country'] == 'France', ['Country', 'Salary']]\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Selections can be achieved outside of the main ",(0,i.jsx)(a.code,{children:".loc"})," for clarity\nForm a separate variable with your selections:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"idx = dataset['Country'].apply(lambda x: x.lower() == 'france')\ndataset.loc[idx, ['Country', 'Salary']]\n"})}),"\n",(0,i.jsxs)(a.h3,{id:"selecting-pandas-data-using-ix",children:["Selecting pandas data using ",(0,i.jsx)(a.code,{children:"ix"}),":"]}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"ix[]"})," indexer is a hybrid of ",(0,i.jsx)(a.code,{children:".loc"})," and ",(0,i.jsx)(a.code,{children:".iloc"}),","]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"ix"})," is label based indexer, it behave just like ",(0,i.jsx)(a.code,{children:".loc"}),", it also supports integer based indexing like ",(0,i.jsx)(a.code,{children:".iloc"})]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"ix"})," indexing works just the same as ",(0,i.jsx)(a.code,{children:".loc"})," when passed strings"]}),"\n"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.ix[['Country']] == dataset.loc[['Country']]\n"})}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:"ix"})," indexing works the same as ",(0,i.jsx)(a.code,{children:".iloc"})," when passed integers"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.reset_index(inplace=True)\ndataset.ix[[2]] == dataset.iloc[[2]]\n"})}),"\n",(0,i.jsx)(a.h2,{id:"add-and-delete-in-dataframe",children:"Add and Delete in DataFrame"}),"\n",(0,i.jsx)(a.h3,{id:"adding-row-in-dataframe",children:"Adding row in DataFrame"}),"\n",(0,i.jsxs)(a.p,{children:["Note:- General recommendation for adding a row is to use ",(0,i.jsx)(a.code,{children:".loc"})," to insert rows in DataFrame\nIf you would use ",(0,i.jsx)(a.code,{children:".ix"}),", you might try to reference a numerically valued index with the index value and accidentally overwrite an existing row of your DataFrame."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.loc[10] = ['India', 27, 65000, 'Yes']\ndataset.ix[11] = ['India', 26, 60000, 'Yes']\ndataset\n"})}),"\n",(0,i.jsx)(a.h3,{id:"adding-column-in-dataframe",children:"Adding column in DataFrame"}),"\n",(0,i.jsx)(a.p,{children:"Columns in DataFrame is basically a series,so adding a column in a DataFrame is as simple as assigning a new column to a DataFrame"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"column = pd.Series(range(1,13), dtype=float)\ncolumn\n\n#adding column in DataFrame\ndataset['id'] = column\ndataset\n"})}),"\n",(0,i.jsx)(a.h3,{id:"delete-a-column-from-dataframe-by-column-name",children:"Delete a column from DataFrame by column name"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"df = dataset.drop('Purchased', axis=1)\ndf\n"})}),"\n",(0,i.jsx)(a.h3,{id:"delete-a-column-from-dataframe-by-row-index",children:"Delete a column from DataFrame by row index"}),"\n",(0,i.jsx)(a.p,{children:"one thing to be noted here is if the in-place is set to be True the deleting happens the the existing dataframe\nby default in-place is False, which creates new DataFrame with deleted rows"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",children:"dataset.drop(dataset.index[2:7], inplace=True)\ndataset\n"})})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>d});var t=n(6540);const i={},s=t.createContext(i);function l(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:a},e.children)}},9774:e=>{e.exports=JSON.parse('{"permalink":"/develbyte/blog/introduction-to-pandas","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2017-07-08-introduction-to-pandas.md","source":"@site/blog/2017-07-08-introduction-to-pandas.md","title":"Introduction To Pandas","description":"Pandas is one of the widely used Python libraries for working with data. it is built on libraries like Matplotlib and NumPy. Pandas is great for data manipulation, data analysis, and data visualization.","date":"2017-07-08T00:00:00.000Z","tags":[{"inline":false,"label":"Python","permalink":"/develbyte/blog/tags/python","description":"Python programming language"},{"inline":false,"label":"Machine Learning","permalink":"/develbyte/blog/tags/machine-learning","description":"Machine learning concepts and techniques"},{"inline":false,"label":"Data Science","permalink":"/develbyte/blog/tags/data-science","description":"Data science methodologies"},{"inline":false,"label":"Pandas","permalink":"/develbyte/blog/tags/pandas","description":"Pandas data manipulation library"}],"readingTime":6.48,"hasTruncateMarker":false,"authors":[{"name":"Narendra Dubey","title":"Builder of Data Systems and Software","url":"https://im-naren.github.io/about/","page":{"permalink":"/develbyte/blog/authors/narendra"},"socials":{"github":"https://github.com/im-naren","linkedin":"https://www.linkedin.com/in/im-naren/","email":"mailto:naren.dubey@zoho.com"},"imageURL":"https://github.com/im-naren.png","key":"narendra"}],"frontMatter":{"slug":"introduction-to-pandas","title":"Introduction To Pandas","authors":["narendra"],"tags":["python","machine-learning","data-science","pandas"],"date":"2017-07-08T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"Spell-correct in Python - Part 1","permalink":"/develbyte/blog/spell-correct-in-python-part-1"},"nextItem":{"title":"Refreshing Probability","permalink":"/develbyte/blog/probability"}}')}}]);